version: '3.8'

services:
  # Redis - Real-time cache
  redis:
    image: redis:7-alpine
    container_name: digitaltwin-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digitaltwin-network
    restart: unless-stopped

  # InfluxDB - Time-series metrics database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: digitaltwin-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: DT2024SecurePass
      DOCKER_INFLUXDB_INIT_ORG: digitaltwin
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: dt-super-secret-auth-token-2024
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - digitaltwin-network
    restart: unless-stopped

  # Backend - FastAPI application
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: digitaltwin-backend
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    environment:
      # Database Configuration (SQLite by default)
      - DB_TYPE=sqlite
      - DB_PATH=data/digital_twin.db

      # Redis Cache
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # InfluxDB Time-series
      - INFLUX_HOST=influxdb
      - INFLUX_PORT=8086
      - INFLUX_USER=admin
      - INFLUX_PASSWORD=DT2024SecurePass
      - INFLUX_ORG=digitaltwin
      - INFLUX_BUCKET=metrics
      - INFLUX_TOKEN=dt-super-secret-auth-token-2024

      # Application Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO

      # Data Storage Strategy
      - REALTIME_CACHE_TTL=60
      - METRICS_STORAGE_INTERVAL=3600
      - ANALYSIS_BATCH_SIZE=100

      # SCADA Configuration
      - SCADA_ENABLED=true
      - MODBUS_HOST=localhost
      - MODBUS_PORT=502
      - SCADA_POLLING_INTERVAL=5

      # AI/ML Configuration
      - ML_ENABLED=true
      - ANOMALY_THRESHOLD=0.95
      - PREDICTION_HORIZON=24
      - MODEL_UPDATE_INTERVAL=86400

      # Feature Flags
      - ENABLE_3D_VISUALIZATION=true
      - ENABLE_ANOMALY_DETECTION=true
      - ENABLE_PREDICTIVE_MAINTENANCE=true
      - ENABLE_OPTIMIZATION=true
    depends_on:
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - digitaltwin-network
    restart: unless-stopped

  # Frontend - React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: digitaltwin-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
    depends_on:
      - backend
    networks:
      - digitaltwin-network
    restart: unless-stopped

networks:
  digitaltwin-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
